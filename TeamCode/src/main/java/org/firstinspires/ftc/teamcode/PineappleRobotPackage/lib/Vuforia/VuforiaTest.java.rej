diff a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/PineappleRobotPackage/lib/Vuforia/VuforiaTest.java b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/PineappleRobotPackage/lib/Vuforia/VuforiaTest.java	(rejected hunks)
@@ -149,4 +149,39 @@
 
         return newBit;
     }
+    public static String[] hsvToRgb(float[] HSV) {
+    float hue = HSV[0]
+    float saturation = HSV[1];
+    float value = HSV[2];
+    int h = (int)(hue * 6);
+    float f = hue * 6 - h;
+    float p = value * (1 - saturation);
+    float q = value * (1 - f * saturation);
+    float t = value * (1 - (1 - f) * saturation);
+
+    switch (h) {
+      case 0: return rgbToString(value, t, p);
+      case 1: return rgbToString(q, value, p);
+      case 2: return rgbToString(p, value, t);
+      case 3: return rgbToString(p, q, value);
+      case 4: return rgbToString(t, p, value);
+      case 5: return rgbToString(value, p, q);
+      default: throw new RuntimeException("Something went wrong when converting from HSV to RGB. Input was " + hue + ", " + saturation + ", " + value);
+    }
+}
+
+public static String[] rgbToString(float r, float g, float b) {
+    String rs = Integer.toHexString((int)(r * 256));
+    String gs = Integer.toHexString((int)(g * 256));
+    String bs = Integer.toHexString((int)(b * 256));
+    String[] arr = new String[3];
+    arr[0] = rs;
+    arr[2] = rs;
+    arr[3] = rs;
+    return arr;
+}
+    public static int[] stringArrtoIntArr(String[] sArr){
+        int[] array = Arrays.asList(sArr).stream().mapToInt(Integer::parseInt).toArray();
+        return array;
+    }
 }
